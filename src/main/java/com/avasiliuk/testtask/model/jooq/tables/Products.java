/*
 * This file is generated by jOOQ.
 */
package com.avasiliuk.testtask.model.jooq.tables;


import com.avasiliuk.testtask.model.jooq.Indexes;
import com.avasiliuk.testtask.model.jooq.Keys;
import com.avasiliuk.testtask.model.jooq.Public;
import com.avasiliuk.testtask.model.jooq.tables.records.ProductsRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Products extends TableImpl<ProductsRecord> {

    /**
     * The reference instance of <code>PUBLIC.PRODUCTS</code>
     */
    public static final Products PRODUCTS = new Products();
    private static final long serialVersionUID = 1442893541;
    /**
     * The column <code>PUBLIC.PRODUCTS.ID</code>.
     */
    public final TableField<ProductsRecord, UUID> ID = createField("ID", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");
    /**
     * The column <code>PUBLIC.PRODUCTS.NAME</code>.
     */
    public final TableField<ProductsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(2147483647).nullable(false), this, "");
    /**
     * The column <code>PUBLIC.PRODUCTS.PRICE</code>.
     */
    public final TableField<ProductsRecord, BigDecimal> PRICE = createField("PRICE", org.jooq.impl.SQLDataType.DECIMAL(20, 2).nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.PRODUCTS</code> table reference
     */
    public Products() {
        this(DSL.name("PRODUCTS"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.PRODUCTS</code> table reference
     */
    public Products(String alias) {
        this(DSL.name(alias), PRODUCTS);
    }

    /**
     * Create an aliased <code>PUBLIC.PRODUCTS</code> table reference
     */
    public Products(Name alias) {
        this(alias, PRODUCTS);
    }

    private Products(Name alias, Table<ProductsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Products(Name alias, Table<ProductsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Products(Table<O> child, ForeignKey<O, ProductsRecord> key) {
        super(child, key, PRODUCTS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductsRecord> getRecordType() {
        return ProductsRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_F, Indexes.UNIQUE_PRODUCTS_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductsRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductsRecord>>asList(Keys.CONSTRAINT_F);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Products as(String alias) {
        return new Products(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Products as(Name alias) {
        return new Products(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Products rename(String name) {
        return new Products(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Products rename(Name name) {
        return new Products(name, null);
    }
}
